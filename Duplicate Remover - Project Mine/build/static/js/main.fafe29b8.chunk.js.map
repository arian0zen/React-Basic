{"version":3,"sources":["components/Success/Success.module.css","components/Output/Display.module.css","components/Input/InputForm.module.css","components/UI/Button/Button.module.css","components/UI/Button/Button.js","components/Input/InputForm.js","components/Success/Success.js","components/Output/Display.js","App.js","index.js"],"names":["module","exports","Button","props","_jsx","type","className","concat","classes","button","onClick","disabled","children","InputForm","_useState","useState","_useState2","_slicedToArray","isError","setIsError","enteredStringRef","useRef","_Fragment","_jsxs","placeholder","ref","onChange","event","enteredString","current","value","trim","length","preventDefault","onSuccess","SuccessHeader","ok","FcOk","size","old","inputString","new","outputString","DisplayOutput","input","output","setOutput","_useState3","_useState4","isSuccess","setIsSuccess","inputArray","Array","from","colorHash","ColorHash","useEffect","_toConsumableArray","Set","deleteHandler","index","clickedChar","prevArray","newArray","duplicateIndexes","forEach","char","i","push","reverse","splice","outputDivs","map","id","style","backgroundColor","hex","MdDeleteSweep","bind","onClear","MdOutlineKeyboardBackspace","App","setInput","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fafe29b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"success-header\":\"Success_success-header__vsu9t\",\"ok\":\"Success_ok__3Rq1I\",\"old\":\"Success_old__Haeb6\",\"new\":\"Success_new__2ezz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"original-input\":\"Display_original-input__3Boot\",\"output-wrapper\":\"Display_output-wrapper__1HeoT\",\"output-card\":\"Display_output-card__2MN0B\",\"go-back\":\"Display_go-back__2Jgua\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-form\":\"InputForm_input-form__2XvEh\",\"input-field\":\"InputForm_input-field__1MmO3\",\"error-text\":\"InputForm_error-text__3xVJD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3UKea\"};","import React from 'react';\n\nimport classes from './Button.module.css';\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.button} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import { useState, useRef } from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./InputForm.module.css\";\r\n\r\nconst InputForm = (props) => {\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const enteredStringRef = useRef();\r\n\r\n  const changeHandler = (event) => {\r\n    const enteredString = enteredStringRef.current.value;\r\n    if(!isError){\r\n        return\r\n    } else if (enteredString.trim().length > 0) {\r\n      setIsError(false);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const enteredString = enteredStringRef.current.value;\r\n    if (enteredString.trim().length === 0) {\r\n      setIsError(true);\r\n      return;\r\n    }\r\n    if(!isError){\r\n        props.onSuccess(enteredString);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={classes[\"input-form\"]}>\r\n        <input\r\n          className={classes[\"input-field\"]}\r\n          type=\"text\"\r\n          placeholder=\"Enter your string here...\"\r\n          ref={enteredStringRef}\r\n          onChange={changeHandler}\r\n        />\r\n        <Button type=\"submit\" onClick={submitHandler}>\r\n          Submit\r\n        </Button>\r\n        {isError && (\r\n          <div className={classes[\"error-text\"]}>\r\n            <span>Bro ? write something..</span>\r\n            <span> For people like you I had to do this extra task</span>\r\n          </div>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import { FcOk } from \"react-icons/fc\";\r\nimport classes from \"./Success.module.css\";\r\n\r\nconst SuccessHeader = (props) => {\r\n  return (\r\n    <div className={classes[\"success-header\"]}>\r\n      \r\n      <p className={classes.ok}><FcOk size={\"40px\"} />Successfully removed all duplicate charecters</p>\r\n      <p>Original string: <span className={classes.old}>{props.inputString}</span></p>\r\n      <p>Success string: <span className={classes.new}>{props.outputString}</span></p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SuccessHeader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ColorHash from \"color-hash\";\r\nimport { MdDeleteSweep, MdOutlineKeyboardBackspace } from \"react-icons/md\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport SuccessHeader from \"../Success/Success\";\r\nimport classes from \"./Display.module.css\";\r\n\r\nconst DisplayOutput = (props) => {\r\n  const [output, setOutput] = useState(props.input);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const inputArray = Array.from(output);\r\n  const colorHash = new ColorHash();\r\n  \r\n  //   const getRandomColor = ()=>{\r\n  //     const letters = \"0123456789ABCDEF\";\r\n  //     let color = \"#\";\r\n  //     for (let i = 0; i < 6; i++) {\r\n  //       color += letters[Math.floor(Math.random() * 16)];\r\n  //     }\r\n  //     return color;\r\n  //   }\r\n\r\n  //   const uniqueChars = [...new Set(inputArray)];\r\n  //   const elementColors = uniqueChars.reduce((acc, element) => {\r\n  //     acc[element] = getRandomColor();\r\n  //     return acc;\r\n  //   }, {});\r\n\r\n  useEffect(() => {\r\n    const uniqueChars = [...new Set(inputArray)];\r\n    if (uniqueChars.length === inputArray.length) {\r\n      setIsSuccess(true);\r\n    }\r\n  }, [inputArray]);\r\n\r\n  const deleteHandler = (index) => {\r\n    const clickedChar = inputArray[index];\r\n    setOutput((prevArray) => {\r\n      const newArray = [...prevArray];\r\n      const duplicateIndexes = [];\r\n      newArray.forEach((char, i) => {\r\n        if (char === clickedChar && i !== index) {\r\n          duplicateIndexes.push(i);\r\n        }\r\n      });\r\n      duplicateIndexes.reverse().forEach((i) => newArray.splice(i, 1));\r\n      return newArray;\r\n    });\r\n  };\r\n\r\n  const goBackHandler = () => {\r\n    props.onClear();\r\n  };\r\n\r\n  const outputDivs = inputArray.map((char, index) => {\r\n    return (\r\n      <div\r\n        className={classes[\"output-card\"]}\r\n        key={index}\r\n        id={index}\r\n        style={{ backgroundColor: colorHash.hex(char) }}\r\n      >\r\n        {char}\r\n        <MdDeleteSweep\r\n          size={\"16px\"}\r\n          onClick={deleteHandler.bind(null, index)}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className={classes[\"original-input\"]}>{output}</div>\r\n      {isSuccess && (\r\n        <SuccessHeader inputString={props.input} outputString={output} />\r\n      )}\r\n      <div className={classes[\"output-wrapper\"]}>{outputDivs}</div>\r\n      <Button className={classes[\"go-back\"]} onClick={goBackHandler} >\r\n        Go Back{\" \"}\r\n        <MdOutlineKeyboardBackspace size={\"20px\"} />\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DisplayOutput;\r\n\r\n// const deleteHandler = (index) => {\r\n//     const char = inputArray[index];\r\n//     setOutput(prevArray => {\r\n//         const newArray = [...prevArray]; // copy the previous array\r\n//         const duplicateIndexes = []; // array to hold the indexes of duplicates\r\n//         newArray.forEach((c, i) => {\r\n//           if (c === char && i !== index) {\r\n//             duplicateIndexes.push(i); // add index of duplicate\r\n//           }\r\n//         });\r\n//         duplicateIndexes.reverse().forEach(i => newArray.splice(i, 1)); // remove duplicates\r\n//         return newArray;\r\n//       });\r\n//   };\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport InputForm from \"./components/Input/InputForm\";\nimport DisplayOutput from \"./components/Output/Display\";\nfunction App() {\n  const [input, setInput] = useState();\n  const receiveInput = (input) => {\n    setInput(input);\n  };\n  const clearInput = () => {\n    console.log(\"clearing input\");\n    setInput();\n  };\n\n  return (\n    <div className=\"app\">\n      {!input ? <InputForm onSuccess={receiveInput} /> : <DisplayOutput input={input} onClear={clearInput} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}